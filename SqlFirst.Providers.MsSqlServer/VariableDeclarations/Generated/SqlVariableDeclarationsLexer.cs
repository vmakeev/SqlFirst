//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\users\keeper\documents\visual studio 2015\Projects\ClassLibrary1\ClassLibrary1\SqlVariableDeclarations.g4 by ANTLR 4.6.4

// Unreachable code detected

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;

#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SqlFirst.Providers.MsSqlServer.VariableDeclarations.Generated {
	[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class SqlVariableDeclarationsLexer : Lexer {
	public const int
		DECLARE=1, INT=2, FLOAT=3, STRING=4, IDENTIFIER=5, VARIABLESIGN=6, LINEBREAK=7, 
		EQUATION=8, SPACE=9, TAB=10, OPEN_PRTH=11, CLOSE_PRTH=12, SEMICOLON=13, 
		SINGLELINE_COMMENTARY=14, MULTILINE_COMMENTATY=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DECLARE", "INT", "FLOAT", "STRING", "IDENTIFIER", "SINGLE_QUOTE", "DIGIT", 
		"LETTER", "UNDERSCOPE", "VARIABLESIGN", "LINEBREAK", "EQUATION", "SPACE", 
		"TAB", "OPEN_PRTH", "CLOSE_PRTH", "SEMICOLON", "SINGLELINE_COMMENTARY", 
		"MULTILINE_COMMENTATY"
	};


	public SqlVariableDeclarationsLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'@'", null, "'='", "' '", "'\t'", 
		"'('", "')'", "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "DECLARE", "INT", "FLOAT", "STRING", "IDENTIFIER", "VARIABLESIGN", 
		"LINEBREAK", "EQUATION", "SPACE", "TAB", "OPEN_PRTH", "CLOSE_PRTH", "SEMICOLON", 
		"SINGLELINE_COMMENTARY", "MULTILINE_COMMENTATY"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SqlVariableDeclarations.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x11\x98\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x5\x2?\n\x2\x3\x3\x3"+
		"\x3\a\x3\x43\n\x3\f\x3\xE\x3\x46\v\x3\x3\x4\x6\x4I\n\x4\r\x4\xE\x4J\x3"+
		"\x4\x3\x4\a\x4O\n\x4\f\x4\xE\x4R\v\x4\x3\x5\x3\x5\a\x5V\n\x5\f\x5\xE\x5"+
		"Y\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\x5\x6_\n\x6\x3\x6\x3\x6\x3\x6\a\x6\x64"+
		"\n\x6\f\x6\xE\x6g\v\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3"+
		"\v\x3\f\x3\f\x3\f\x5\fv\n\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\a\x13\x87\n\x13"+
		"\f\x13\xE\x13\x8A\v\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\a\x14\x91\n"+
		"\x14\f\x14\xE\x14\x94\v\x14\x3\x14\x3\x14\x3\x14\x5W\x88\x92\x2\x2\x15"+
		"\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\x2\xF\x2\x2\x11\x2\x2\x13"+
		"\x2\x2\x15\x2\b\x17\x2\t\x19\x2\n\x1B\x2\v\x1D\x2\f\x1F\x2\r!\x2\xE#\x2"+
		"\xF%\x2\x10\'\x2\x11\x3\x2\x3\x4\x2\x43\\\x63|\xA0\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2"+
		"\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2"+
		"\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x3>\x3\x2\x2\x2\x5@\x3\x2\x2\x2\a"+
		"H\x3\x2\x2\x2\tS\x3\x2\x2\x2\v^\x3\x2\x2\x2\rh\x3\x2\x2\x2\xFj\x3\x2\x2"+
		"\x2\x11l\x3\x2\x2\x2\x13n\x3\x2\x2\x2\x15p\x3\x2\x2\x2\x17u\x3\x2\x2\x2"+
		"\x19w\x3\x2\x2\x2\x1By\x3\x2\x2\x2\x1D{\x3\x2\x2\x2\x1F}\x3\x2\x2\x2!"+
		"\x7F\x3\x2\x2\x2#\x81\x3\x2\x2\x2%\x83\x3\x2\x2\x2\'\x8D\x3\x2\x2\x2)"+
		"*\a\x46\x2\x2*+\aG\x2\x2+,\a\x45\x2\x2,-\aN\x2\x2-.\a\x43\x2\x2./\aT\x2"+
		"\x2/?\aG\x2\x2\x30\x31\a\x66\x2\x2\x31\x32\ag\x2\x2\x32\x33\a\x65\x2\x2"+
		"\x33\x34\an\x2\x2\x34\x35\a\x63\x2\x2\x35\x36\at\x2\x2\x36?\ag\x2\x2\x37"+
		"\x38\a\x46\x2\x2\x38\x39\ag\x2\x2\x39:\a\x65\x2\x2:;\an\x2\x2;<\a\x63"+
		"\x2\x2<=\at\x2\x2=?\ag\x2\x2>)\x3\x2\x2\x2>\x30\x3\x2\x2\x2>\x37\x3\x2"+
		"\x2\x2?\x4\x3\x2\x2\x2@\x44\x5\xF\b\x2\x41\x43\x5\xF\b\x2\x42\x41\x3\x2"+
		"\x2\x2\x43\x46\x3\x2\x2\x2\x44\x42\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45"+
		"\x6\x3\x2\x2\x2\x46\x44\x3\x2\x2\x2GI\x5\x5\x3\x2HG\x3\x2\x2\x2IJ\x3\x2"+
		"\x2\x2JH\x3\x2\x2\x2JK\x3\x2\x2\x2KL\x3\x2\x2\x2LP\a\x30\x2\x2MO\x5\x5"+
		"\x3\x2NM\x3\x2\x2\x2OR\x3\x2\x2\x2PN\x3\x2\x2\x2PQ\x3\x2\x2\x2Q\b\x3\x2"+
		"\x2\x2RP\x3\x2\x2\x2SW\x5\r\a\x2TV\v\x2\x2\x2UT\x3\x2\x2\x2VY\x3\x2\x2"+
		"\x2WX\x3\x2\x2\x2WU\x3\x2\x2\x2XZ\x3\x2\x2\x2YW\x3\x2\x2\x2Z[\x5\r\a\x2"+
		"[\n\x3\x2\x2\x2\\_\x5\x11\t\x2]_\x5\x13\n\x2^\\\x3\x2\x2\x2^]\x3\x2\x2"+
		"\x2_\x65\x3\x2\x2\x2`\x64\x5\x11\t\x2\x61\x64\x5\xF\b\x2\x62\x64\x5\x13"+
		"\n\x2\x63`\x3\x2\x2\x2\x63\x61\x3\x2\x2\x2\x63\x62\x3\x2\x2\x2\x64g\x3"+
		"\x2\x2\x2\x65\x63\x3\x2\x2\x2\x65\x66\x3\x2\x2\x2\x66\f\x3\x2\x2\x2g\x65"+
		"\x3\x2\x2\x2hi\a)\x2\x2i\xE\x3\x2\x2\x2jk\x4\x32;\x2k\x10\x3\x2\x2\x2"+
		"lm\t\x2\x2\x2m\x12\x3\x2\x2\x2no\a\x61\x2\x2o\x14\x3\x2\x2\x2pq\a\x42"+
		"\x2\x2q\x16\x3\x2\x2\x2rs\a\xF\x2\x2sv\a\f\x2\x2tv\a\f\x2\x2ur\x3\x2\x2"+
		"\x2ut\x3\x2\x2\x2v\x18\x3\x2\x2\x2wx\a?\x2\x2x\x1A\x3\x2\x2\x2yz\a\"\x2"+
		"\x2z\x1C\x3\x2\x2\x2{|\a\v\x2\x2|\x1E\x3\x2\x2\x2}~\a*\x2\x2~ \x3\x2\x2"+
		"\x2\x7F\x80\a+\x2\x2\x80\"\x3\x2\x2\x2\x81\x82\a=\x2\x2\x82$\x3\x2\x2"+
		"\x2\x83\x84\a/\x2\x2\x84\x88\a/\x2\x2\x85\x87\v\x2\x2\x2\x86\x85\x3\x2"+
		"\x2\x2\x87\x8A\x3\x2\x2\x2\x88\x89\x3\x2\x2\x2\x88\x86\x3\x2\x2\x2\x89"+
		"\x8B\x3\x2\x2\x2\x8A\x88\x3\x2\x2\x2\x8B\x8C\x5\x17\f\x2\x8C&\x3\x2\x2"+
		"\x2\x8D\x8E\a\x31\x2\x2\x8E\x92\a,\x2\x2\x8F\x91\v\x2\x2\x2\x90\x8F\x3"+
		"\x2\x2\x2\x91\x94\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2"+
		"\x93\x95\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x95\x96\a,\x2\x2\x96\x97\a\x31"+
		"\x2\x2\x97(\x3\x2\x2\x2\xE\x2>\x44JPW^\x63\x65u\x88\x92\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SqlFirst.Providers.MsSqlServer.VariableDeclarations
